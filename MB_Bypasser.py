import os
import subprocess
import sys
import ctypes
from time import sleep
import psutil
from colored import fg, attr

#Text ASCII (For Design)
welcome = ("""\u001b[38;5;19m
          __  __       _                        ____        _              _____
         |  \/  |     | |                      |  _ \      | |            |  _  |
         | \  / | __ _| |_      ____ _ _ __ ___| |_) |_   _| |_ ___  ___  | |_) |_   _ _ __   __ _ ___ ___  ___ _ __
         | |\/| |/ _` | \ \ /\ / / _` | '__/ _ \  _ <| | | | __/ _ \/ __| |  _ <| | | | '_ \ / _` / __/ __|/ _ \ '__|
         | |  | | (_| | |\ V  V / (_| | | |  __/ |_) | |_| | ||  __/\__ \ | |_) | |_| | |_) | (_| \__ \__ \  __/ |
         |_|  |_|\__,_|_| \_/\_/ \__,_|_|  \___|____/ \__, |\__\___||___/ |____/ \__, | .__/ \__,_|___/___/\___|_|
                                                       __/ |                      __/ | |
                                                      |___/                      |___/|_|                           
                                              """)
def is_admin():
    try:
        return ctypes.windll.shell32.IsUserAnAdmin()
    except:
        return False

def malwarebytes_is_open():
    try:
        for process in psutil.process_iter(['pid', 'name']):
            if process.info['name'] == 'Malwarebytes.exe':
                print(f"{fg(19)}Malwarebytes Is Open, Close It And Try Again!")
                sleep(4)
                sys.exit()
        else:
            pass
    except Exception as e:
        print(f"Error: {e}, Please Try Again!")
        sleep(5)
        sys.exit()


def confirm_operation(message):
    while True:
        response = input(f"{message} (Y/N): ").strip().upper()
        if response == 'Y':
            return True
        elif response == 'N':
            return False
        else:
            print("\n [-] Invalid Input! Please Type A Valid Input! (Y/N)")
            sleep(3)
            os.system('cls')
            print(welcome)
            print("‎ ‎ ‎ ‎ ‎ ‎ ‎‎ ‎‎ ‎‎ ‎ ------------------------------GreekProject------------------------------ \n")

def spoof_machine_guid():
    try:
        machine_guid = subprocess.check_output(['powershell', '-c', '[guid]::NewGuid().ToString()']).strip().decode()
        subprocess.call(['reg', 'add', 'HKLM\SOFTWARE\Microsoft\Cryptography', '/v', 'MachineGuid', '/t', 'REG_SZ', '/d', machine_guid, '/f'], stdout=subprocess.DEVNULL, stderr=subprocess.DEVNULL)
        print("\n[+] Spoofed MachineGUID")
        sleep(1)
        print("\n[+] Cleaned Traces")
        sleep(1)
        print("\n[+] Done!")
        os.system('cls')
        print("- Make Sure To Restart Your Computer To Work -")
    except subprocess.CalledProcessError as e:
        print(f"Error: {e}, Please Try Again!")
        sleep(50)

# Coming Soon Feature!
def create_scheduled_task():
    machine_guid = subprocess.check_output(['powershell', '-c', '[guid]::NewGuid().ToString()']).strip().decode()
    command = f'reg add "HKLM\SOFTWARE\Microsoft\Cryptography" /v "MachineGuid" /t REG_SZ /d "{machine_guid}" /f'
    subprocess.call(['schtasks', '/create', '/tn', '"Malwarebytes-Premium-Reset"', '/sc', 'weekly', '/mo', '2', '/tr', command], shell=True)
    print("\n[+] Created scheduled task")
    spoof_machine_guid()

def main():
    if not is_admin():
        print("\n[-] Administrator Privileges Are Required.\n")
        sleep(5)
        sys.exit()

    malwarebytes_is_open()
    os.system('cls')
    print(welcome)
    print("‎ ‎ ‎ ‎ ‎ ‎ ‎‎ ‎‎ ‎‎ ‎ ------------------------------GreekProject------------------------------ \n")

    if confirm_operation("‎ ‎ ‎ ‎ ‎ ‎ ‎‎ ‎‎ ‎‎ ‎‎ ‎ ‎ ‎ ‎‎‎‎‎‎‎‎‎‎‎‎‎ Bypass MalwareBytes?"):
        spoof_machine_guid()
    else:
        print("\n [+] Operation Cancelled By User!")
        sleep(1)
        print("\n [+] Exiting Program...")
        sleep(3)
        sys.exit()

    input("Press Enter to exit...")
    sys.exit()

if __name__ == "__main__":
    main()

# Made With Love By GreekProject! <3
